// L2Registry ABI - core functions for text records and ownership
export const L2_REGISTRY_ABI = [
	{
		type: "function",
		name: "ABI",
		inputs: [
			{ name: "node", type: "bytes32", internalType: "bytes32" },
			{ name: "contentTypes", type: "uint256", internalType: "uint256" },
		],
		outputs: [
			{ name: "", type: "uint256", internalType: "uint256" },
			{ name: "", type: "bytes", internalType: "bytes" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "addRegistrar",
		inputs: [{ name: "registrar", type: "address", internalType: "address" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "addr",
		inputs: [{ name: "node", type: "bytes32", internalType: "bytes32" }],
		outputs: [{ name: "", type: "address", internalType: "address payable" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "addr",
		inputs: [
			{ name: "node", type: "bytes32", internalType: "bytes32" },
			{ name: "coinType", type: "uint256", internalType: "uint256" },
		],
		outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "approve",
		inputs: [
			{ name: "to", type: "address", internalType: "address" },
			{ name: "tokenId", type: "uint256", internalType: "uint256" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "balanceOf",
		inputs: [{ name: "owner", type: "address", internalType: "address" }],
		outputs: [{ name: "balance", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "baseNode",
		inputs: [],
		outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "contenthash",
		inputs: [{ name: "node", type: "bytes32", internalType: "bytes32" }],
		outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "createSubnode",
		inputs: [
			{ name: "node", type: "bytes32", internalType: "bytes32" },
			{ name: "label", type: "string", internalType: "string" },
			{ name: "owner", type: "address", internalType: "address" },
			{ name: "data", type: "bytes[]", internalType: "bytes[]" },
		],
		outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "decodeName",
		inputs: [{ name: "name", type: "bytes", internalType: "bytes" }],
		outputs: [{ name: "", type: "string", internalType: "string" }],
		stateMutability: "pure",
	},
	{
		type: "function",
		name: "getApproved",
		inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
		outputs: [{ name: "operator", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "initialize",
		inputs: [
			{ name: "tokenName", type: "string", internalType: "string" },
			{ name: "tokenSymbol", type: "string", internalType: "string" },
			{ name: "baseURI", type: "string", internalType: "string" },
			{ name: "admin", type: "address", internalType: "address" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "isApprovedForAll",
		inputs: [
			{ name: "owner", type: "address", internalType: "address" },
			{ name: "operator", type: "address", internalType: "address" },
		],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "makeNode",
		inputs: [
			{ name: "parentNode", type: "bytes32", internalType: "bytes32" },
			{ name: "label", type: "string", internalType: "string" },
		],
		outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
		stateMutability: "pure",
	},
	{
		type: "function",
		name: "multicall",
		inputs: [{ name: "data", type: "bytes[]", internalType: "bytes[]" }],
		outputs: [{ name: "results", type: "bytes[]", internalType: "bytes[]" }],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "multicallWithNodeCheck",
		inputs: [
			{ name: "", type: "bytes32", internalType: "bytes32" },
			{ name: "data", type: "bytes[]", internalType: "bytes[]" },
		],
		outputs: [{ name: "results", type: "bytes[]", internalType: "bytes[]" }],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "namehash",
		inputs: [{ name: "name", type: "string", internalType: "string" }],
		outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
		stateMutability: "pure",
	},
	{
		type: "function",
		name: "names",
		inputs: [{ name: "node", type: "bytes32", internalType: "bytes32" }],
		outputs: [{ name: "name", type: "bytes", internalType: "bytes" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "owner",
		inputs: [{ name: "node", type: "bytes32", internalType: "bytes32" }],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "owner",
		inputs: [],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "ownerOf",
		inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
		outputs: [{ name: "owner", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "registrars",
		inputs: [{ name: "registrar", type: "address", internalType: "address" }],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "removeRegistrar",
		inputs: [{ name: "registrar", type: "address", internalType: "address" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "resolve",
		inputs: [
			{ name: "name", type: "bytes", internalType: "bytes" },
			{ name: "data", type: "bytes", internalType: "bytes" },
		],
		outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "safeTransferFrom",
		inputs: [
			{ name: "from", type: "address", internalType: "address" },
			{ name: "to", type: "address", internalType: "address" },
			{ name: "tokenId", type: "uint256", internalType: "uint256" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "safeTransferFrom",
		inputs: [
			{ name: "from", type: "address", internalType: "address" },
			{ name: "to", type: "address", internalType: "address" },
			{ name: "tokenId", type: "uint256", internalType: "uint256" },
			{ name: "data", type: "bytes", internalType: "bytes" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setABI",
		inputs: [
			{ name: "node", type: "bytes32", internalType: "bytes32" },
			{ name: "contentType", type: "uint256", internalType: "uint256" },
			{ name: "data", type: "bytes", internalType: "bytes" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setAddr",
		inputs: [
			{ name: "node", type: "bytes32", internalType: "bytes32" },
			{ name: "coinType", type: "uint256", internalType: "uint256" },
			{ name: "a", type: "bytes", internalType: "bytes" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setAddr",
		inputs: [
			{ name: "node", type: "bytes32", internalType: "bytes32" },
			{ name: "addr", type: "address", internalType: "address" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setApprovalForAll",
		inputs: [
			{ name: "operator", type: "address", internalType: "address" },
			{ name: "approved", type: "bool", internalType: "bool" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setBaseURI",
		inputs: [{ name: "baseURI", type: "string", internalType: "string" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setContenthash",
		inputs: [
			{ name: "node", type: "bytes32", internalType: "bytes32" },
			{ name: "hash", type: "bytes", internalType: "bytes" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setText",
		inputs: [
			{ name: "node", type: "bytes32", internalType: "bytes32" },
			{ name: "key", type: "string", internalType: "string" },
			{ name: "value", type: "string", internalType: "string" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "supportsInterface",
		inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "text",
		inputs: [
			{ name: "node", type: "bytes32", internalType: "bytes32" },
			{ name: "key", type: "string", internalType: "string" },
		],
		outputs: [{ name: "", type: "string", internalType: "string" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "transferFrom",
		inputs: [
			{ name: "from", type: "address", internalType: "address" },
			{ name: "to", type: "address", internalType: "address" },
			{ name: "tokenId", type: "uint256", internalType: "uint256" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "event",
		name: "ABIChanged",
		inputs: [
			{
				name: "node",
				type: "bytes32",
				indexed: true,
				internalType: "bytes32",
			},
			{
				name: "contentType",
				type: "uint256",
				indexed: true,
				internalType: "uint256",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "AddrChanged",
		inputs: [
			{
				name: "node",
				type: "bytes32",
				indexed: true,
				internalType: "bytes32",
			},
			{
				name: "a",
				type: "address",
				indexed: false,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "AddressChanged",
		inputs: [
			{
				name: "node",
				type: "bytes32",
				indexed: true,
				internalType: "bytes32",
			},
			{
				name: "coinType",
				type: "uint256",
				indexed: false,
				internalType: "uint256",
			},
			{
				name: "newAddress",
				type: "bytes",
				indexed: false,
				internalType: "bytes",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "Approval",
		inputs: [
			{
				name: "owner",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "approved",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "tokenId",
				type: "uint256",
				indexed: true,
				internalType: "uint256",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "ApprovalForAll",
		inputs: [
			{
				name: "owner",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "operator",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "approved",
				type: "bool",
				indexed: false,
				internalType: "bool",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "ContenthashChanged",
		inputs: [
			{
				name: "node",
				type: "bytes32",
				indexed: true,
				internalType: "bytes32",
			},
			{
				name: "hash",
				type: "bytes",
				indexed: false,
				internalType: "bytes",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "TextChanged",
		inputs: [
			{
				name: "node",
				type: "bytes32",
				indexed: true,
				internalType: "bytes32",
			},
			{
				name: "indexedKey",
				type: "string",
				indexed: true,
				internalType: "string",
			},
			{
				name: "key",
				type: "string",
				indexed: false,
				internalType: "string",
			},
			{
				name: "value",
				type: "string",
				indexed: false,
				internalType: "string",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "Transfer",
		inputs: [
			{
				name: "from",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "to",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "tokenId",
				type: "uint256",
				indexed: true,
				internalType: "uint256",
			},
		],
		anonymous: false,
	},
	{
		type: "error",
		name: "Unauthorized",
		inputs: [{ name: "node", type: "bytes32", internalType: "bytes32" }],
	},
] as const;
